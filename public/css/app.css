@charset "UTF-8";

/**
 * ミックスイン（他のページで使用するミックスインを定義）
**/

/*!
 * ress.css • v1.2.2
 * MIT License
 * github.com/filipelinhares/ress
 */

/* # =================================================================
   # Global selectors
   # ================================================================= */

html {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  overflow-y: scroll;
  /* All browsers without overlaying scrollbars */
  -webkit-text-size-adjust: 100%;
  /* iOS 8+ */
}

*,
::before,
::after {
  background-repeat: no-repeat;
  /* Set `background-repeat: no-repeat` to all elements and pseudo elements */
  -webkit-box-sizing: inherit;
          box-sizing: inherit;
}

::before,
::after {
  text-decoration: inherit;
  /* Inherit text-decoration and vertical align to ::before and ::after pseudo elements */
  vertical-align: inherit;
}

* {
  padding: 0;
  /* Reset `padding` and `margin` of all elements */
  margin: 0;
}

/* # =================================================================
     # General elements
     # ================================================================= */

/* Add the correct display in iOS 4-7.*/

audio:not([controls]) {
  display: none;
  height: 0;
}

hr {
  overflow: visible;
  /* Show the overflow in Edge and IE */
}

/*
  * Correct `block` display not defined for any HTML5 element in IE 8/9
  * Correct `block` display not defined for `details` or `summary` in IE 10/11
  * and Firefox
  * Correct `block` display not defined for `main` in IE 11
  */

article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  display: block;
}

summary {
  display: list-item;
  /* Add the correct display in all browsers */
}

small {
  font-size: 80%;
  /* Set font-size to 80% in `small` elements */
}

[hidden],
template {
  display: none;
  /* Add the correct display in IE */
}

abbr[title] {
  border-bottom: 1px dotted;
  /* Add a bordered underline effect in all browsers */
  text-decoration: none;
  /* Remove text decoration in Firefox 40+ */
}

a {
  background-color: transparent;
  /* Remove the gray background on active links in IE 10 */
  -webkit-text-decoration-skip: objects;
  /* Remove gaps in links underline in iOS 8+ and Safari 8+ */
}

a:active,
a:hover {
  outline-width: 0;
  /* Remove the outline when hovering in all browsers */
}

code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  /* Specify the font family of code elements */
}

b,
strong {
  font-weight: bolder;
  /* Correct style set to `bold` in Edge 12+, Safari 6.2+, and Chrome 18+ */
}

dfn {
  font-style: italic;
  /* Address styling not present in Safari and Chrome */
}

/* Address styling not present in IE 8/9 */

mark {
  background-color: #ff0;
  color: #000;
}

/* https://gist.github.com/unruthless/413930 */

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* # =================================================================
     # Forms
     # ================================================================= */

input {
  border-radius: 0;
}

/* Apply cursor pointer to button elements */

button,
[type="button"],
[type="reset"],
[type="submit"],
[role="button"] {
  cursor: pointer;
}

/* Replace pointer cursor in disabled elements */

[disabled] {
  cursor: default;
}

[type="number"] {
  width: auto;
  /* Firefox 36+ */
}

[type="search"] {
  -webkit-appearance: textfield;
  /* Safari 8+ */
}

[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
  /* Safari 8 */
}

textarea {
  overflow: auto;
  /* Internet Explorer 11+ */
  resize: vertical;
  /* Specify textarea resizability */
}

button,
input,
optgroup,
select,
textarea {
  font: inherit;
  /* Specify font inheritance of form elements */
}

optgroup {
  font-weight: bold;
  /* Restore the font weight unset by the previous rule. */
}

button {
  overflow: visible;
  /* Address `overflow` set to `hidden` in IE 8/9/10/11 */
}

/* Remove inner padding and border in Firefox 4+ */

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: 0;
  padding: 0;
}

/* Replace focus style removed in the border reset above */

button:-moz-focusring,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  outline: 1px dotted ButtonText;
}

button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* Correct the inability to style clickable types in iOS */
}

button,
select {
  text-transform: none;
  /* Firefox 40+, Internet Explorer 11- */
}

/* Remove the default button styling in all browsers */

button,
input,
select,
textarea {
  background-color: transparent;
  border-style: none;
  color: inherit;
}

/* Style select like a standard input */

select {
  -moz-appearance: none;
  /* Firefox 36+ */
  -webkit-appearance: none;
  /* Chrome 41+ */
}

select::-ms-expand {
  display: none;
  /* Internet Explorer 11+ */
}

select::-ms-value {
  color: currentColor;
  /* Internet Explorer 11+ */
}

legend {
  border: 0;
  /* Correct `color` not being inherited in IE 8/9/10/11 */
  color: inherit;
  /* Correct the color inheritance from `fieldset` elements in IE */
  display: table;
  /* Correct the text wrapping in Edge and IE */
  max-width: 100%;
  /* Correct the text wrapping in Edge and IE */
  white-space: normal;
  /* Correct the text wrapping in Edge and IE */
}

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* Correct the inability to style clickable types in iOS and Safari */
  font: inherit;
  /* Change font properties to `inherit` in Chrome and Safari */
}

[type="search"] {
  -webkit-appearance: textfield;
  /* Correct the odd appearance in Chrome and Safari */
  outline-offset: -2px;
  /* Correct the outline style in Safari */
}

/* # =================================================================
     # Specify media element style
     # ================================================================= */

img {
  border-style: none;
  /* Remove border when inside `a` element in IE 8/9/10 */
}

/* Add the correct vertical alignment in Chrome, Firefox, and Opera */

progress {
  vertical-align: baseline;
}

svg:not(:root) {
  overflow: hidden;
  /* Internet Explorer 11- */
}

audio,
canvas,
progress,
video {
  display: inline-block;
  /* Internet Explorer 11+, Windows Phone 8.1+ */
}

/* # =================================================================
     # Accessibility
     # ================================================================= */

/* Hide content from screens but not screenreaders */

@media screen {
  [hidden~="screen"] {
    display: inherit;
  }

  [hidden~="screen"]:not(:active):not(:focus):not(:target) {
    position: absolute !important;
    clip: rect(0 0 0 0) !important;
  }
}

/* Specify the progress cursor of updating elements */

[aria-busy="true"] {
  cursor: progress;
}

/* Specify the pointer cursor of trigger elements */

[aria-controls] {
  cursor: pointer;
}

/* Specify the unstyled cursor of disabled, not-editable, or otherwise inoperable elements */

[aria-disabled] {
  cursor: default;
}

/* # =================================================================
     # Selection
     # ================================================================= */

/* Specify text selection background color and omit drop shadow */

::-moz-selection {
  background-color: #b3d4fc;
  /* Required when declaring ::selection */
  color: #000;
  text-shadow: none;
}

::selection {
  background-color: #b3d4fc;
  /* Required when declaring ::selection */
  color: #000;
  text-shadow: none;
}

p {
  margin: 0;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  color: inherit;
  font-family: inherit;
}

h1 {
  font-size: 2rem;
  font-weight: inherit;
}

h2 {
  font-size: 1.8rem;
  font-weight: inherit;
}

h3 {
  font-size: 1.6rem;
  font-weight: inherit;
}

h4 {
  font-size: 1.4rem;
  font-weight: inherit;
}

h5 {
  font-size: 1.2rem;
  font-weight: inherit;
}

h6 {
  font-size: 1rem;
  font-weight: inherit;
}

a {
  color: #8BC34A;
  text-decoration: none;
  background-color: transparent;
  -webkit-transition: color .2s ease-in-out;
  transition: color .2s ease-in-out;
}

a:hover,
a:focus {
  color: #b0d683;
}

ul,
ol {
  list-style: none;
  vertical-align: baseline;
}

u {
  text-decoration: underline;
}

input[type="text"],
input[type="password"],
input[type="email"],
input[type="number"],
input[type="tel"],
input[type="date"],
select,
textarea {
  background-color: #FFFFFF;
  background-clip: padding-box;
  border: 1px solid #979797;
  border-radius: 0.25rem;
  color: #333333;
  padding: 0.3rem 0.6rem;
  font-size: 1rem;
  -webkit-transition: border-color .2s ease-in-out, -webkit-box-shadow .2s ease-in-out;
  transition: border-color .2s ease-in-out, -webkit-box-shadow .2s ease-in-out;
  transition: border-color .2s ease-in-out, box-shadow .2s ease-in-out;
  transition: border-color .2s ease-in-out, box-shadow .2s ease-in-out, -webkit-box-shadow .2s ease-in-out;
}

input[type="text"]::-webkit-input-placeholder,
input[type="password"]::-webkit-input-placeholder,
input[type="email"]::-webkit-input-placeholder,
input[type="number"]::-webkit-input-placeholder,
input[type="tel"]::-webkit-input-placeholder,
input[type="date"]::-webkit-input-placeholder,
select::-webkit-input-placeholder,
textarea::-webkit-input-placeholder {
  color: #e6e6e6;
}

input[type="text"]:-ms-input-placeholder,
input[type="password"]:-ms-input-placeholder,
input[type="email"]:-ms-input-placeholder,
input[type="number"]:-ms-input-placeholder,
input[type="tel"]:-ms-input-placeholder,
input[type="date"]:-ms-input-placeholder,
select:-ms-input-placeholder,
textarea:-ms-input-placeholder {
  color: #e6e6e6;
}

input[type="text"]::-ms-input-placeholder,
input[type="password"]::-ms-input-placeholder,
input[type="email"]::-ms-input-placeholder,
input[type="number"]::-ms-input-placeholder,
input[type="tel"]::-ms-input-placeholder,
input[type="date"]::-ms-input-placeholder,
select::-ms-input-placeholder,
textarea::-ms-input-placeholder {
  color: #e6e6e6;
}

input[type="text"]::placeholder,
input[type="password"]::placeholder,
input[type="email"]::placeholder,
input[type="number"]::placeholder,
input[type="tel"]::placeholder,
input[type="date"]::placeholder,
select::placeholder,
textarea::placeholder {
  color: #e6e6e6;
}

input[type="text"]:focus,
input[type="password"]:focus,
input[type="email"]:focus,
input[type="number"]:focus,
input[type="tel"]:focus,
input[type="date"]:focus,
select:focus,
textarea:focus {
  border-color: #8BC34A;
  outline: 0;
  -webkit-box-shadow: 0 0 0 0.1rem rgba(139, 195, 74, 0.25);
          box-shadow: 0 0 0 0.1rem rgba(139, 195, 74, 0.25);
}

input[type="text"]:disabled,
input[type="password"]:disabled,
input[type="email"]:disabled,
input[type="number"]:disabled,
input[type="tel"]:disabled,
input[type="date"]:disabled,
select:disabled,
textarea:disabled {
  opacity: .5;
  cursor: not-allowed;
  background-color: #fafafa;
  border-color: #333333;
}

input[type="file"]:focus,
input[type="radio"]:focus,
input[type="checkbox"]:focus {
  outline: 1px thin #8BC34A;
}

input[type="number"] {
  text-align: right;
  -moz-appearance: textfield;
}

input[type="number"]::-webkit-outer-spin-button,
input[type="number"]::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

button {
  background-color: #fafafa;
  border: 1px solid #d4d4d4;
  border-radius: 0.25rem;
  color: #333333;
  padding: 0.3rem 0.6rem;
  display: inline-block;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  font-size: 1rem;
  -webkit-transition: color .2s ease-in-out, background-color .2s ease-in-out, border-color .2s ease-in-out, -webkit-box-shadow .2s ease-in-out;
  transition: color .2s ease-in-out, background-color .2s ease-in-out, border-color .2s ease-in-out, -webkit-box-shadow .2s ease-in-out;
  transition: color .2s ease-in-out, background-color .2s ease-in-out, border-color .2s ease-in-out, box-shadow .2s ease-in-out;
  transition: color .2s ease-in-out, background-color .2s ease-in-out, border-color .2s ease-in-out, box-shadow .2s ease-in-out, -webkit-box-shadow .2s ease-in-out;
}

button:not(:disabled):hover {
  background-color: #d4d4d4;
  border-color: #d4d4d4;
}

button:disabled {
  opacity: .5;
  cursor: not-allowed;
  text-decoration: line-through;
}

select {
  -webkit-appearance: menulist-button;
  -moz-appearance: menulist;
  text-indent: 0.01px;
  text-overflow: '';
  vertical-align: middle;
}

select::-ms-expand {
  background: none;
  border: none;
  color: #333333;
  display: block;
}

select:not([size]):not([multiple]) {
  height: calc(2.25rem + 2px);
}

select[multiple] {
  height: auto;
}

.text-light {
  color: #fafafa;
}

.text-dark {
  color: #333333;
}

.text-gray {
  color: #979797;
}

.text-primary {
  color: #8BC34A;
}

.text-secondary {
  color: #3A9963;
}

.text-tertiary {
  color: #D76E52;
}

.text-success {
  color: #28a745;
}

.text-info {
  color: #17a2b8;
}

.text-warning {
  color: #ffc107;
}

.text-danger {
  color: #c82333;
}

a:focus.text-light,
a:hover.text-light {
  color: white;
}

a:focus.text-dark,
a:hover.text-dark {
  color: #595959;
}

a:focus.text-gray,
a:hover.text-gray {
  color: #bdbdbd;
}

a:focus.text-primary,
a:hover.text-primary {
  color: #b0d683;
}

a:focus.text-secondary,
a:hover.text-secondary {
  color: #5ec289;
}

a:focus.text-tertiary,
a:hover.text-tertiary {
  color: #e5a290;
}

a:focus.text-success,
a:hover.text-success {
  color: #48d368;
}

a:focus.text-info,
a:hover.text-info {
  color: #36cee6;
}

a:focus.text-warning,
a:hover.text-warning {
  color: #ffd454;
}

a:focus.text-danger,
a:hover.text-danger {
  color: #e15664;
}

.font-bold {
  font-weight: bold;
}

.font-normal {
  font-weight: normal;
}

.text-center {
  text-align: center;
}

.text-left {
  text-align: left;
}

.text-right {
  text-align: right;
}

.p-0 {
  padding: 0;
}

.p-05 {
  padding: .5rem;
}

.p-1 {
  padding: 1rem;
}

.p-2 {
  padding: 2rem;
}

.p-3 {
  padding: 3rem;
}

.pt-0 {
  padding-top: 0;
}

.pt-05 {
  padding-top: .5rem;
}

.pt-1 {
  padding-top: 1rem;
}

.pt-2 {
  padding-top: 2rem;
}

.pt-3 {
  padding-top: 3rem;
}

.pr-0 {
  padding-right: 0;
}

.pr-05 {
  padding-right: .5rem;
}

.pr-1 {
  padding-right: 1rem;
}

.pr-2 {
  padding-right: 2rem;
}

.pr-3 {
  padding-right: 3rem;
}

.pb-0 {
  padding-bottom: 0;
}

.pb-05 {
  padding-bottom: .5rem;
}

.pb-1 {
  padding-bottom: 1rem;
}

.pb-2 {
  padding-bottom: 2rem;
}

.pb-3 {
  padding-bottom: 3rem;
}

.pl-0 {
  padding-left: 0;
}

.pl-05 {
  padding-left: .5rem;
}

.pl-1 {
  padding-left: 1rem;
}

.pl-2 {
  padding-left: 2rem;
}

.pl-3 {
  padding-left: 3rem;
}

.m-0 {
  margin: 0;
}

.m-05 {
  margin: .5rem;
}

.m-1 {
  margin: 1rem;
}

.m-2 {
  margin: 2rem;
}

.m-3 {
  margin: 3rem;
}

.mt-0 {
  margin-top: 0;
}

.mt-05 {
  margin-top: .5rem;
}

.mt-1 {
  margin-top: 1rem;
}

.mt-2 {
  margin-top: 2rem;
}

.mt-3 {
  margin-top: 3rem;
}

.mt-0 {
  margin-right: 0;
}

.mr-05 {
  margin-right: .5rem;
}

.mr-1 {
  margin-right: 1rem;
}

.mr-2 {
  margin-right: 2rem;
}

.mr-3 {
  margin-right: 3rem;
}

.mt-0 {
  margin-bottom: 0;
}

.mb-05 {
  margin-bottom: .5rem;
}

.mb-1 {
  margin-bottom: 1rem;
}

.mb-2 {
  margin-bottom: 2rem;
}

.mb-3 {
  margin-bottom: 3rem;
}

.mt-0 {
  margin-left: 0;
}

.ml-05 {
  margin-left: .5rem;
}

.ml-1 {
  margin-left: 1rem;
}

.ml-2 {
  margin-left: 2rem;
}

.ml-3 {
  margin-left: 3rem;
}

.c-default {
  cursor: default;
}

.c-move {
  cursor: move;
}

.c-pointer {
  cursor: pointer;
}

.c-not {
  cursor: not-allowed;
}

.c-none {
  cursor: none;
}

.d-hidden {
  display: none;
}

.d-inline-block {
  display: inline-block;
}

.d-block {
  display: block;
}

.d-inline {
  display: inline;
}

.f-left {
  float: left;
}

.f-right {
  float: right;
}

.clear-both::after {
  display: block;
  content: "";
  clear: both;
}

.w-full {
  width: 100%;
}

.w-half {
  width: 50%;
}

.w-quarter {
  width: 25%;
}

.bg-light {
  background-color: #fafafa;
}

.bg-dark {
  background-color: #333333;
}

.bg-gray {
  background-color: #979797;
}

.bg-primary {
  background-color: #8BC34A;
}

.bg-secondary {
  background-color: #3A9963;
}

.bg-tertiary {
  background-color: #D76E52;
}

.bg-success {
  background-color: #28a745;
}

.bg-info {
  background-color: #17a2b8;
}

.bg-warning {
  background-color: #ffc107;
}

.bg-danger {
  background-color: #c82333;
}

.bg-clear {
  background-color: transparent;
}

.button-light {
  border: 1px solid #d4d4d4;
  background-color: #fafafa;
  color: #333333;
}

.button-light:not(:disabled):hover {
  background-color: #d4d4d4;
}

.button-dark {
  border: 1px solid #333333;
  background-color: #333333;
  color: #fafafa;
}

.button-dark:not(:disabled):hover {
  background-color: #0d0d0d;
}

.button-gray {
  border: 1px solid #979797;
  background-color: #979797;
  color: #fafafa;
}

.button-gray:not(:disabled):hover {
  background-color: #717171;
}

.button-primary {
  border: 1px solid #8BC34A;
  background-color: #8BC34A;
  color: #fafafa;
}

.button-primary:not(:disabled):hover {
  background-color: #649130;
}

.button-secondary {
  border: 1px solid #3A9963;
  background-color: #3A9963;
  color: #fafafa;
}

.button-secondary:not(:disabled):hover {
  background-color: #25623f;
}

.button-tertiary {
  border: 1px solid #D76E52;
  background-color: #D76E52;
  color: #fafafa;
}

.button-tertiary:not(:disabled):hover {
  background-color: #b34629;
}

.button-success {
  border: 1px solid #28a745;
  background-color: #28a745;
  color: #fafafa;
}

.button-success:not(:disabled):hover {
  background-color: #19692c;
}

.button-info {
  border: 1px solid #17a2b8;
  background-color: #17a2b8;
  color: #fafafa;
}

.button-info:not(:disabled):hover {
  background-color: #0f6674;
}

.button-warning {
  border: 1px solid #ffc107;
  background-color: #ffc107;
  color: #fafafa;
}

.button-warning:not(:disabled):hover {
  background-color: #ba8b00;
}

.button-danger {
  border: 1px solid #c82333;
  background-color: #c82333;
  color: #fafafa;
}

.button-danger:not(:disabled):hover {
  background-color: #871822;
}

.button-large {
  padding: .6rem 1.2rem;
}

.button-small {
  padding: .15rem .3rem;
  font-size: .9rem;
}

.custom-radio {
  position: relative;
  padding-left: 1.5rem;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}

.custom-radio input {
  position: absolute;
  opacity: 0;
}

.custom-radio span {
  position: absolute;
  left: 0;
  top: .1rem;
  height: 1.2rem;
  width: 1.2rem;
  background-color: #FFFFFF;
  border: 1px solid #979797;
  border-radius: 50%;
  -webkit-transition: all .15s ease-in-out;
  transition: all .15s ease-in-out;
}

.custom-radio span::after {
  content: "";
  position: absolute;
  display: none;
  left: .35rem;
  top: .35rem;
  width: .4rem;
  height: .4rem;
  border-radius: 50%;
  background-color: #FFFFFF;
}

.custom-radio:hover input ~ span {
  background-color: rgba(151, 151, 151, 0.3);
}

.custom-radio input:checked ~ span {
  background-color: #8BC34A;
}

.custom-radio input:checked ~ span::after {
  display: block;
}

.custom-radio input:disabled ~ span {
  cursor: not-allowed;
  opacity: .7;
  border-color: #333333;
  background-color: #979797;
}

.custom-checkbox {
  position: relative;
  padding-left: 1.5rem;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}

.custom-checkbox input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
}

.custom-checkbox span {
  position: absolute;
  left: 0;
  top: .1rem;
  height: 1.2rem;
  width: 1.2rem;
  background-color: #FFFFFF;
  border: 1px solid #979797;
  border-radius: 0.25rem;
  -webkit-transition: all .15s ease-in-out;
  transition: all .15s ease-in-out;
}

.custom-checkbox span::after {
  content: "";
  position: absolute;
  display: none;
  left: .35rem;
  top: .15rem;
  width: .5rem;
  height: .7rem;
  border: solid #FFFFFF;
  border-width: 0 .2rem .2rem 0;
  -webkit-transform: rotate(45deg);
          transform: rotate(45deg);
}

.custom-checkbox:hover input ~ span {
  background-color: rgba(151, 151, 151, 0.3);
}

.custom-checkbox input:checked ~ span {
  background-color: #8BC34A;
}

.custom-checkbox input:checked ~ span:after {
  display: block;
}

.custom-checkbox input:disabled ~ span {
  cursor: not-allowed;
  opacity: .7;
  border-color: #333333;
  background-color: #979797;
}

.form {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-flow: row wrap;
          flex-flow: row wrap;
  -ms-flex-item-align: start;
      align-self: flex-start;
  max-width: 1280px;
}

.form .form-item {
  padding: 0 10% 1rem 0;
  white-space: nowrap;
}

.form .form-item.item-quarter {
  width: 25%;
}

.form .form-item.item-half {
  width: 50%;
}

.form .form-item.item-full {
  width: 100%;
}

.form .form-item .form-label {
  display: block;
  width: 100%;
  white-space: nowrap;
  font-weight: bold;
  margin-bottom: .1rem;
}

.form .form-item .form-control.control-half {
  width: 50%;
}

.form .form-item .form-control.control-quarter {
  width: 25%;
}

.form .form-item input.form-control,
.form .form-item textarea.form-control,
.form .form-item div.form-control {
  display: block;
  width: 100%;
}

.form .form-item select.form-control {
  display: block;
  min-width: 8rem;
}

.required {
  color: #c82333;
  padding: 0 .1rem;
}

#move-page-top {
  position: fixed;
  opacity: 0;
  bottom: -4rem;
  right: 1rem;
  width: 4rem;
  height: 4rem;
  padding-top: .5rem;
  text-align: center;
  background-color: #D76E52;
  border-radius: 1rem;
  -webkit-box-shadow: 0.1rem 0.1rem 0.1rem #979797;
          box-shadow: 0.1rem 0.1rem 0.1rem #979797;
  cursor: pointer;
  z-index: 1000;
  -webkit-transition: opacity .3s ease-in-out, bottom .2s ease-in-out;
  transition: opacity .3s ease-in-out, bottom .2s ease-in-out;
}

#move-page-top.show {
  opacity: .9;
  bottom: 1rem;
}

#move-page-top img {
  width: 3rem;
  height: 3rem;
}

#alert {
  position: fixed;
  border-radius: .25rem;
  background-color: #979797;
  color: #fafafa;
  padding: .25rem .5rem;
  opacity: 0;
  z-index: -1;
  -webkit-transition: all .3s;
  transition: all .3s;
  top: 3.1rem;
  left: 5%;
  width: 90%;
}

#alert.show {
  opacity: 1;
  z-index: 1000;
}

#alert.danger {
  color: #c82333;
  background-color: #f8d8db;
  -webkit-box-shadow: 0 0 0 0.1rem rgba(200, 35, 51, 0.25);
          box-shadow: 0 0 0 0.1rem rgba(200, 35, 51, 0.25);
}

#alert.warning {
  color: #ffc107;
  background-color: #fffaed;
  -webkit-box-shadow: 0 0 0 0.1rem rgba(255, 193, 7, 0.25);
          box-shadow: 0 0 0 0.1rem rgba(255, 193, 7, 0.25);
}

#alert.success {
  color: #28a745;
  background-color: #c4f1ce;
  -webkit-box-shadow: 0 0 0 0.1rem rgba(40, 167, 69, 0.25);
          box-shadow: 0 0 0 0.1rem rgba(40, 167, 69, 0.25);
}

#alert.info {
  color: #17a2b8;
  background-color: #beeff7;
  -webkit-box-shadow: 0 0 0 0.1rem rgba(23, 162, 184, 0.25);
          box-shadow: 0 0 0 0.1rem rgba(23, 162, 184, 0.25);
}

#alert .alert-messages {
  margin-left: 1.5rem;
  list-style-type: disc;
}

#loading-spinner {
  display: none;
  -webkit-transform: all .3s;
          transform: all .3s;
  z-index: 1000;
  width: 100vw;
  height: 100vh;
  top: 0;
  left: 0;
  padding: 6rem;
}

#loading-spinner.show {
  display: block;
  position: fixed;
  font-size: 10px;
}

#loading-spinner > .icon,
#loading-spinner > .icon:after {
  border-radius: 50%;
  width: 10em;
  height: 10em;
}

#loading-spinner > .icon {
  position: relative;
  text-indent: -9999em;
  border-top: 0.5rem solid rgba(139, 195, 74, 0.2);
  border-right: 0.5rem solid rgba(139, 195, 74, 0.2);
  border-bottom: 0.5rem solid rgba(139, 195, 74, 0.2);
  border-left: 0.5rem solid #8BC34A;
  -webkit-transform: translateZ(0);
  transform: translateZ(0);
  -webkit-animation: load8 1s infinite linear;
  animation: load8 1s infinite linear;
  margin: 0 auto;
}

@-webkit-keyframes load8 {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }

  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}

@keyframes load8 {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }

  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}

[v-cloak] > * {
  display: none !important;
}

.quillWrapper .ql-toolbar {
  padding: 0 !important;
  background-color: rgba(139, 195, 74, 0.5);
}

.quillWrapper .ql-toolbar .ql-formats {
  margin: 0 !important;
}

.quillWrapper .ql-toolbar .ql-formats > button {
  height: auto !important;
}

.quillWrapper .ql-toolbar .ql-link,
.quillWrapper .ql-toolbar .ql-image,
.quillWrapper .ql-toolbar .ql-video {
  display: none !important;
}

.quillWrapper .ql-container {
  background-color: #FFFFFF;
}

.quillWrapper .ql-editor {
  color: #333333;
  min-height: 5rem !important;
  padding: .5rem;
}

.quillWrapper .ql-editor:focus {
  outline: 0;
  -webkit-box-shadow: 0 0 0 0.1rem rgba(139, 195, 74, 0.5);
          box-shadow: 0 0 0 0.1rem rgba(139, 195, 74, 0.5);
}

html {
  font-size: 16px;
}

body {
  font-family: 'Hiragino Kaku Gothic Pro', '\30D2\30E9\30AE\30CE\89D2\30B4   Pro W3', メイリオ, Meiryo, '\FF2D\FF33   \FF30\30B4\30B7\30C3\30AF', sans-serif;
  font-weight: 500;
  font-size: 1rem;
  background-color: #fafafa;
  color: #333333;
}

#header {
  display: block;
}

#main {
  display: block;
}

#footer {
  display: block;
}


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/