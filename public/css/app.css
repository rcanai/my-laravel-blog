@charset "UTF-8";

/**
 * ミックスイン（他のページで使用するミックスインを定義）
**/

/*! minireset.css v0.0.3 | MIT License | github.com/jgthms/minireset.css */

html,
body,
p,
ol,
ul,
li,
dl,
dt,
dd,
blockquote,
figure,
fieldset,
legend,
textarea,
pre,
iframe,
hr,
h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
  padding: 0;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: 100%;
  font-weight: normal;
}

ul {
  list-style: none;
}

button,
input,
select,
textarea {
  margin: 0;
}

html {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

*,
*:before,
*:after {
  -webkit-box-sizing: inherit;
          box-sizing: inherit;
}

img,
embed,
iframe,
object,
audio,
video {
  height: auto;
  max-width: 100%;
}

iframe {
  border: 0;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
  text-align: left;
}

p {
  margin: 0;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  color: inherit;
  font-family: inherit;
}

h1 {
  font-size: 2rem;
  font-weight: inherit;
}

h2 {
  font-size: 1.8rem;
  font-weight: inherit;
}

h3 {
  font-size: 1.6rem;
  font-weight: inherit;
}

h4 {
  font-size: 1.4rem;
  font-weight: inherit;
}

h5 {
  font-size: 1.2rem;
  font-weight: inherit;
}

h6 {
  font-size: 1rem;
  font-weight: inherit;
}

a {
  color: #8BC34A;
  text-decoration: none;
  background-color: transparent;
  -webkit-transition: color .2s ease-in-out;
  transition: color .2s ease-in-out;
}

a:hover,
a:focus {
  color: #b0d683;
}

ul,
ol {
  list-style: none;
  vertical-align: baseline;
}

u {
  text-decoration: underline;
}

html {
  font-size: 16px;
}

body {
  font-family: 'Hiragino Kaku Gothic Pro', '\30D2\30E9\30AE\30CE\89D2\30B4   Pro W3', メイリオ, Meiryo, '\FF2D\FF33   \FF30\30B4\30B7\30C3\30AF', sans-serif;
  font-weight: 500;
  font-size: 1rem;
  background-color: #fafafa;
  color: #333333;
  display: grid;
  grid-template-rows: 1fr auto 1fr;
  grid-template-columns: 4fr 1fr;
  grid-auto-flow: column dense;
  grid-gap: 1rem .5rem;
}

#header {
  grid-row: 1 / 1;
  grid-column: 1 / span 2;
}

#header .container {
  width: 90%;
  max-width: 940px;
  margin: 0 auto;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-flow: row nowrap;
          flex-flow: row nowrap;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

#header .app-title {
  font-size: 1.5rem;
}

#header nav ul {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-flow: row nowrap;
          flex-flow: row nowrap;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

#header nav ul li {
  margin-left: 1rem;
}

#header nav ul li a {
  display: inline-block;
  width: 100%;
  height: 100%;
}

#main {
  grid-row: 2 / 2;
  grid-column: 1 / 2;
}

#main .container {
  width: 90%;
  max-width: 940px;
  margin: 0 auto;
}

#footer {
  grid-row: 3 / 3;
  grid-column: 1 / 2;
}

#aside {
  grid-row: 2 / 2;
  grid-column: 2 / 2;
  border: 1px solid #979797;
  border-radius: .25rem;
}

#aside .aside-title {
  font-weight: bold;
  font-size: 1.2rem;
}

#aside .aside-list li {
  border-bottom: 1px solid #979797;
  line-height: 2rem;
}

#aside .aside-list li:first-child {
  border-top: 1px solid #979797;
}

#aside .aside-list li a {
  display: inline-block;
  width: 100%;
  height: 100%;
}

.pagination {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-flow: row nowrap;
          flex-flow: row nowrap;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.pagination .page-item {
  border: 1px solid #979797;
  border-radius: .25rem;
  margin: .5rem;
  font-weight: bold;
}

.pagination .page-item.active {
  color: #333333;
  background-color: rgba(139, 195, 74, 0.1);
}

.pagination .page-item:hover .page-link {
  color: #333333;
  background-color: rgba(139, 195, 74, 0.1);
}

.pagination .page-link {
  display: inline-block;
  min-width: 2rem;
  height: 2rem;
  line-height: 2rem;
  text-align: center;
}


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvYXNzZXRzL3Nhc3MvYXBwLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL2Fzc2V0cy9zYXNzL3Jlc291cmNlcy9hc3NldHMvc2Fzcy9wYXJ0aWFscy9fbWl4aW4uc2NzcyIsIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvYXNzZXRzL3Nhc3MvcmVzb3VyY2VzL2Fzc2V0cy9zYXNzL3BhcnRpYWxzL19taW5pcmVzZXQuc2NzcyIsIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvYXNzZXRzL3Nhc3MvcmVzb3VyY2VzL2Fzc2V0cy9zYXNzL3BhcnRpYWxzL190eXBvZ3JhcGh5LnNjc3MiLCJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL2Fzc2V0cy9zYXNzL3Jlc291cmNlcy9hc3NldHMvc2Fzcy9hcHAuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUNBQTs7R0RJRzs7QUVKSDs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7RUF1QkU7RUFDQTtDRlFEOztBRUxEOzs7Ozs7RUFNRTtFQUNBO0NGUUQ7O0FFTEQ7RUFDRTtDRlFEOztBRUxEOzs7O0VBSUU7Q0ZRRDs7QUVMRDtFQUNFO1VBQUE7Q0ZRRDs7QUVMRDs7O0VBQ0U7VUFBQTtDRlVEOztBRVBEOzs7Ozs7RUFNRTtFQUNBO0NGVUQ7O0FFUEQ7RUFDRTtDRlVEOztBRVBEO0VBQ0U7RUFDQTtDRlVEOztBRVBEOztFQUVFO0VBQ0E7Q0ZVRDs7QUd6RkQ7RUFDRTtDSDRGRDs7QUd6RkQ7Ozs7OztFQU1FO0VBQ0E7Q0g0RkQ7O0FHekZEO0VBQ0U7RUFDQTtDSDRGRDs7QUd6RkQ7RUFDRTtFQUNBO0NINEZEOztBR3pGRDtFQUNFO0VBQ0E7Q0g0RkQ7O0FHekZEO0VBQ0U7RUFDQTtDSDRGRDs7QUd6RkQ7RUFDRTtFQUNBO0NINEZEOztBR3pGRDtFQUNFO0VBQ0E7Q0g0RkQ7O0FHekZEO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7RUFBQTtDSDRGRDs7QUdoR0Q7O0VBT0k7Q0g4Rkg7O0FHMUZEOztFQUVFO0VBQ0E7Q0g2RkQ7O0FHMUZEO0VBQ0U7Q0g2RkQ7O0FJNUlEO0VBQ0U7Q0orSUQ7O0FJNUlEO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUVBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7Q0o4SUQ7O0FJM0lEO0VBQ0U7RUFDQTtDSjhJRDs7QUloSkQ7RUFJSTtFQUNBO0VBQ0E7RUFDQTtFQUFBO0VBQUE7RUFDQTtFQUFBO01BQUE7VUFBQTtFQUNBO01BQUE7VUFBQTtDSmdKSDs7QUl6SkQ7RUFZSTtDSmlKSDs7QUk3SkQ7RUFnQk07RUFBQTtFQUFBO0VBQ0E7RUFBQTtNQUFBO1VBQUE7RUFDQTtNQUFBO1VBQUE7Q0ppSkw7O0FJaEpLO0VBQ0U7Q0ptSlA7O0FJbEpPO0VBQ0U7RUFDQTtFQUNBO0NKcUpUOztBSTlJRDtFQUNFO0VBQ0E7Q0ppSkQ7O0FJbkpEO0VBSUk7RUFDQTtFQUNBO0NKbUpIOztBSS9JRDtFQUNFO0VBQ0E7Q0prSkQ7O0FJL0lEO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7Q0prSkQ7O0FJdEpEO0VBTUk7RUFDQTtDSm9KSDs7QUkzSkQ7RUFXTTtFQUNBO0NKb0pMOztBSWhLRDtFQWNRO0NKc0pQOztBSXBLRDtFQWlCUTtFQUNBO0VBQ0E7Q0p1SlA7O0FJakpEO0VBQ0U7RUFBQTtFQUFBO0VBQ0E7RUFBQTtNQUFBO1VBQUE7RUFDQTtNQUFBO1VBQUE7Q0pvSkQ7O0FJdkpEO0VBS0k7RUFDQTtFQUNBO0VBQ0E7Q0pzSkg7O0FJOUpEO0VBVU07RUFDQTtDSndKTDs7QUluS0Q7RUFlUTtFQUNBO0NKd0pQOztBSXhLRDtFQXFCSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0NKdUpIIiwiZmlsZSI6ImNzcy9hcHAuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGNoYXJzZXQgXCJVVEYtOFwiO1xuLyoqXG4gKiDjg5/jg4Pjgq/jgrnjgqTjg7PvvIjku5bjga7jg5rjg7zjgrjjgafkvb/nlKjjgZnjgovjg5/jg4Pjgq/jgrnjgqTjg7PjgpLlrprnvqnvvIlcbioqL1xuLyohIG1pbmlyZXNldC5jc3MgdjAuMC4zIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL2pndGhtcy9taW5pcmVzZXQuY3NzICovXG5odG1sLFxuYm9keSxcbnAsXG5vbCxcbnVsLFxubGksXG5kbCxcbmR0LFxuZGQsXG5ibG9ja3F1b3RlLFxuZmlndXJlLFxuZmllbGRzZXQsXG5sZWdlbmQsXG50ZXh0YXJlYSxcbnByZSxcbmlmcmFtZSxcbmhyLFxuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2IHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG5oMSxcbmgyLFxuaDMsXG5oNCxcbmg1LFxuaDYge1xuICBmb250LXNpemU6IDEwMCU7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG59XG5cbnVsIHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbn1cblxuYnV0dG9uLFxuaW5wdXQsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIG1hcmdpbjogMDtcbn1cblxuaHRtbCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbiosICo6YmVmb3JlLCAqOmFmdGVyIHtcbiAgYm94LXNpemluZzogaW5oZXJpdDtcbn1cblxuaW1nLFxuZW1iZWQsXG5pZnJhbWUsXG5vYmplY3QsXG5hdWRpbyxcbnZpZGVvIHtcbiAgaGVpZ2h0OiBhdXRvO1xuICBtYXgtd2lkdGg6IDEwMCU7XG59XG5cbmlmcmFtZSB7XG4gIGJvcmRlcjogMDtcbn1cblxudGFibGUge1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICBib3JkZXItc3BhY2luZzogMDtcbn1cblxudGQsXG50aCB7XG4gIHBhZGRpbmc6IDA7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG59XG5cbnAge1xuICBtYXJnaW46IDA7XG59XG5cbmgxLFxuaDIsXG5oMyxcbmg0LFxuaDUsXG5oNiB7XG4gIGNvbG9yOiBpbmhlcml0O1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbn1cblxuaDEge1xuICBmb250LXNpemU6IDJyZW07XG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0O1xufVxuXG5oMiB7XG4gIGZvbnQtc2l6ZTogMS44cmVtO1xuICBmb250LXdlaWdodDogaW5oZXJpdDtcbn1cblxuaDMge1xuICBmb250LXNpemU6IDEuNnJlbTtcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XG59XG5cbmg0IHtcbiAgZm9udC1zaXplOiAxLjRyZW07XG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0O1xufVxuXG5oNSB7XG4gIGZvbnQtc2l6ZTogMS4ycmVtO1xuICBmb250LXdlaWdodDogaW5oZXJpdDtcbn1cblxuaDYge1xuICBmb250LXNpemU6IDFyZW07XG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0O1xufVxuXG5hIHtcbiAgY29sb3I6ICM4QkMzNEE7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIHRyYW5zaXRpb246IGNvbG9yIC4ycyBlYXNlLWluLW91dDtcbn1cblxuYTpob3ZlciwgYTpmb2N1cyB7XG4gIGNvbG9yOiAjYjBkNjgzO1xufVxuXG51bCxcbm9sIHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG51IHtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG59XG5cbmh0bWwge1xuICBmb250LXNpemU6IDE2cHg7XG59XG5cbmJvZHkge1xuICBmb250LWZhbWlseTogJ0hpcmFnaW5vIEtha3UgR290aGljIFBybycsICfjg5Ljg6njgq7jg47op5LjgrQgUHJvIFczJywg44Oh44Kk44Oq44KqLCBNZWlyeW8sICfvvK3vvLMg77yw44K044K344OD44KvJywgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmFmYWZhO1xuICBjb2xvcjogIzMzMzMzMztcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAxZnIgYXV0byAxZnI7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogNGZyIDFmcjtcbiAgZ3JpZC1hdXRvLWZsb3c6IGNvbHVtbiBkZW5zZTtcbiAgZ3JpZC1nYXA6IDFyZW0gLjVyZW07XG59XG5cbiNoZWFkZXIge1xuICBncmlkLXJvdzogMSAvIDE7XG4gIGdyaWQtY29sdW1uOiAxIC8gc3BhbiAyO1xufVxuXG4jaGVhZGVyIC5jb250YWluZXIge1xuICB3aWR0aDogOTAlO1xuICBtYXgtd2lkdGg6IDk0MHB4O1xuICBtYXJnaW46IDAgYXV0bztcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1mbG93OiByb3cgbm93cmFwO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4jaGVhZGVyIC5hcHAtdGl0bGUge1xuICBmb250LXNpemU6IDEuNXJlbTtcbn1cblxuI2hlYWRlciBuYXYgdWwge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWZsb3c6IHJvdyBub3dyYXA7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbiNoZWFkZXIgbmF2IHVsIGxpIHtcbiAgbWFyZ2luLWxlZnQ6IDFyZW07XG59XG5cbiNoZWFkZXIgbmF2IHVsIGxpIGEge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbiNtYWluIHtcbiAgZ3JpZC1yb3c6IDIgLyAyO1xuICBncmlkLWNvbHVtbjogMSAvIDI7XG59XG5cbiNtYWluIC5jb250YWluZXIge1xuICB3aWR0aDogOTAlO1xuICBtYXgtd2lkdGg6IDk0MHB4O1xuICBtYXJnaW46IDAgYXV0bztcbn1cblxuI2Zvb3RlciB7XG4gIGdyaWQtcm93OiAzIC8gMztcbiAgZ3JpZC1jb2x1bW46IDEgLyAyO1xufVxuXG4jYXNpZGUge1xuICBncmlkLXJvdzogMiAvIDI7XG4gIGdyaWQtY29sdW1uOiAyIC8gMjtcbiAgYm9yZGVyOiAxcHggc29saWQgIzk3OTc5NztcbiAgYm9yZGVyLXJhZGl1czogLjI1cmVtO1xufVxuXG4jYXNpZGUgLmFzaWRlLXRpdGxlIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGZvbnQtc2l6ZTogMS4ycmVtO1xufVxuXG4jYXNpZGUgLmFzaWRlLWxpc3QgbGkge1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgIzk3OTc5NztcbiAgbGluZS1oZWlnaHQ6IDJyZW07XG59XG5cbiNhc2lkZSAuYXNpZGUtbGlzdCBsaTpmaXJzdC1jaGlsZCB7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjOTc5Nzk3O1xufVxuXG4jYXNpZGUgLmFzaWRlLWxpc3QgbGkgYSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLnBhZ2luYXRpb24ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWZsb3c6IHJvdyBub3dyYXA7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5wYWdpbmF0aW9uIC5wYWdlLWl0ZW0ge1xuICBib3JkZXI6IDFweCBzb2xpZCAjOTc5Nzk3O1xuICBib3JkZXItcmFkaXVzOiAuMjVyZW07XG4gIG1hcmdpbjogLjVyZW07XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4ucGFnaW5hdGlvbiAucGFnZS1pdGVtLmFjdGl2ZSB7XG4gIGNvbG9yOiAjMzMzMzMzO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDEzOSwgMTk1LCA3NCwgMC4xKTtcbn1cblxuLnBhZ2luYXRpb24gLnBhZ2UtaXRlbTpob3ZlciAucGFnZS1saW5rIHtcbiAgY29sb3I6ICMzMzMzMzM7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTM5LCAxOTUsIDc0LCAwLjEpO1xufVxuXG4ucGFnaW5hdGlvbiAucGFnZS1saW5rIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBtaW4td2lkdGg6IDJyZW07XG4gIGhlaWdodDogMnJlbTtcbiAgbGluZS1oZWlnaHQ6IDJyZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkluSmxjMjkxY21ObGN5OWhjM05sZEhNdmMyRnpjeTloY0hBdWMyTnpjeUlzSW5KbGMyOTFjbU5sY3k5aGMzTmxkSE12YzJGemN5OXdZWEowYVdGc2N5OWZkbUZ5YVdGaWJHVnpMbk5qYzNNaUxDSnlaWE52ZFhKalpYTXZZWE56WlhSekwzTmhjM012Y0dGeWRHbGhiSE12WDIxcGVHbHVMbk5qYzNNaUxDSnlaWE52ZFhKalpYTXZZWE56WlhSekwzTmhjM012Y0dGeWRHbGhiSE12WDIxcGJtbHlaWE5sZEM1elkzTnpJaXdpY21WemIzVnlZMlZ6TDJGemMyVjBjeTl6WVhOekwzQmhjblJwWVd4ekwxOTBlWEJ2WjNKaGNHaDVMbk5qYzNNaVhTd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sc2lMeThnNWE2YTVwV3dYRzVBYVcxd2IzSjBJRndpY0dGeWRHbGhiSE12ZG1GeWFXRmliR1Z6WENJN1hHNWNiaTh2SU9PRG4rT0RnK09DcitPQ3VlT0NwT09EczF4dVFHbHRjRzl5ZENCY0luQmhjblJwWVd4ekwyMXBlR2x1WENJN1hHNWNiaTh2SU9PRHF1T0N1K09EZytPRGlGeHVRR2x0Y0c5eWRDQmNJbkJoY25ScFlXeHpMMjFwYm1seVpYTmxkRndpTzF4dVhHNHZMeURqZ3IvamdxVGpnNTNqZ3JEamc2bmpnNVhqZ3FOY2JrQnBiWEJ2Y25RZ1hDSndZWEowYVdGc2N5OTBlWEJ2WjNKaGNHaDVYQ0k3WEc1Y2JpOHZYRzR2THlEbGhhamt2WlBqZ2E3amc2empncVRqZ3FMamdxYmpnNGhjYmk4dlhHNW9kRzFzSUh0Y2JpQWdabTl1ZEMxemFYcGxPaUF4Tm5CNE8xeHVmVnh1WEc1aWIyUjVJSHRjYmlBZ1ptOXVkQzFtWVcxcGJIazZJQ2RJYVhKaFoybHVieUJMWVd0MUlFZHZkR2hwWXlCUWNtOG5MQ0FuNDRPUzQ0T3A0NEt1NDRPTzZLZVM0NEswSUZCeWJ5QlhNeWNzSU9PRG9lT0NwT09EcXVPQ3Fpd2dUV1ZwY25sdkxDQW43N3l0Nzd5eklPKzhzT09DdE9PQ3QrT0RnK09Dcnljc0lITmhibk10YzJWeWFXWTdYRzRnSUdadmJuUXRkMlZwWjJoME9pQTFNREE3WEc0Z0lHWnZiblF0YzJsNlpUb2dNWEpsYlR0Y2JpQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dKR052Ykc5eUxXeHBaMmgwTzF4dUlDQmpiMnh2Y2pvZ0pHTnZiRzl5TFdSaGNtczdYRzRnSUM4dklITmxkQ0JuY21sa1hHNGdJR1JwYzNCc1lYazZJR2R5YVdRN1hHNGdJR2R5YVdRdGRHVnRjR3hoZEdVdGNtOTNjem9nTVdaeUlHRjFkRzhnTVdaeU8xeHVJQ0JuY21sa0xYUmxiWEJzWVhSbExXTnZiSFZ0Ym5NNklEUm1jaUF4Wm5JN1hHNGdJR2R5YVdRdFlYVjBieTFtYkc5M09pQmpiMngxYlc0Z1pHVnVjMlU3WEc0Z0lHZHlhV1F0WjJGd09pQXhjbVZ0SUM0MWNtVnRPeUF2THlCeWIzY2dMeUJqYjJ4MWJXNWNibjFjYmx4dUkyaGxZV1JsY2lCN1hHNGdJR2R5YVdRdGNtOTNPaUF4SUM4Z01UdGNiaUFnWjNKcFpDMWpiMngxYlc0NklERWdMeUJ6Y0dGdUlESTdYRzRnSUM1amIyNTBZV2x1WlhJZ2UxeHVJQ0FnSUhkcFpIUm9PaUE1TUNVN1hHNGdJQ0FnYldGNExYZHBaSFJvT2lBa1lYQndiR2xqWVhScGIyNHRiV2x1TFhkcFpIUm9PMXh1SUNBZ0lHMWhjbWRwYmpvZ01DQmhkWFJ2TzF4dUlDQWdJR1JwYzNCc1lYazZJR1pzWlhnN1hHNGdJQ0FnWm14bGVDMW1iRzkzT2lCeWIzY2dibTkzY21Gd08xeHVJQ0FnSUdGc2FXZHVMV2wwWlcxek9pQmpaVzUwWlhJN1hHNGdJSDFjYmlBZ0xtRndjQzEwYVhSc1pTQjdYRzRnSUNBZ1ptOXVkQzF6YVhwbE9pQXhMalZ5WlcwN1hHNGdJSDFjYmlBZ2JtRjJJSHRjYmlBZ0lDQjFiQ0I3WEc0Z0lDQWdJQ0JrYVhOd2JHRjVPaUJtYkdWNE8xeHVJQ0FnSUNBZ1pteGxlQzFtYkc5M09pQnliM2NnYm05M2NtRndPMXh1SUNBZ0lDQWdZV3hwWjI0dGFYUmxiWE02SUdObGJuUmxjanRjYmlBZ0lDQWdJR3hwSUh0Y2JpQWdJQ0FnSUNBZ2JXRnlaMmx1TFd4bFpuUTZJREZ5WlcwN1hHNGdJQ0FnSUNBZ0lHRWdlMXh1SUNBZ0lDQWdJQ0FnSUdScGMzQnNZWGs2SUdsdWJHbHVaUzFpYkc5amF6dGNiaUFnSUNBZ0lDQWdJQ0IzYVdSMGFEb2dNVEF3SlR0Y2JpQWdJQ0FnSUNBZ0lDQm9aV2xuYUhRNklERXdNQ1U3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUgxY2JpQWdJQ0I5WEc0Z0lIMWNibjFjYmx4dUkyMWhhVzRnZTF4dUlDQm5jbWxrTFhKdmR6b2dNaUF2SURJN1hHNGdJR2R5YVdRdFkyOXNkVzF1T2lBeElDOGdNanRjYmlBZ0xtTnZiblJoYVc1bGNpQjdYRzRnSUNBZ2QybGtkR2c2SURrd0pUdGNiaUFnSUNCdFlYZ3RkMmxrZEdnNklDUmhjSEJzYVdOaGRHbHZiaTF0YVc0dGQybGtkR2c3WEc0Z0lDQWdiV0Z5WjJsdU9pQXdJR0YxZEc4N1hHNGdJSDFjYm4xY2JseHVJMlp2YjNSbGNpQjdYRzRnSUdkeWFXUXRjbTkzT2lBeklDOGdNenRjYmlBZ1ozSnBaQzFqYjJ4MWJXNDZJREVnTHlBeU8xeHVmVnh1WEc0allYTnBaR1VnZTF4dUlDQm5jbWxrTFhKdmR6b2dNaUF2SURJN1hHNGdJR2R5YVdRdFkyOXNkVzF1T2lBeUlDOGdNanRjYmlBZ1ltOXlaR1Z5T2lBeGNIZ2djMjlzYVdRZ0pHTnZiRzl5TFdkeVlYazdYRzRnSUdKdmNtUmxjaTF5WVdScGRYTTZJQzR5TlhKbGJUdGNiaUFnTG1GemFXUmxMWFJwZEd4bElIdGNiaUFnSUNCbWIyNTBMWGRsYVdkb2REb2dZbTlzWkR0Y2JpQWdJQ0JtYjI1MExYTnBlbVU2SURFdU1uSmxiVHRjYmlBZ2ZWeHVJQ0F1WVhOcFpHVXRiR2x6ZENCN1hHNGdJQ0FnYkdrZ2UxeHVJQ0FnSUNBZ1ltOXlaR1Z5TFdKdmRIUnZiVG9nTVhCNElITnZiR2xrSUNSamIyeHZjaTFuY21GNU8xeHVJQ0FnSUNBZ2JHbHVaUzFvWldsbmFIUTZJREp5WlcwN1hHNGdJQ0FnSUNBbU9tWnBjbk4wTFdOb2FXeGtJSHRjYmlBZ0lDQWdJQ0FnWW05eVpHVnlMWFJ2Y0RvZ01YQjRJSE52Ykdsa0lDUmpiMnh2Y2kxbmNtRjVPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lDQWdZU0I3WEc0Z0lDQWdJQ0FnSUdScGMzQnNZWGs2SUdsdWJHbHVaUzFpYkc5amF6dGNiaUFnSUNBZ0lDQWdkMmxrZEdnNklERXdNQ1U3WEc0Z0lDQWdJQ0FnSUdobGFXZG9kRG9nTVRBd0pUdGNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNGdJSDFjYm4xY2JseHVMbkJoWjJsdVlYUnBiMjRnZTF4dUlDQmthWE53YkdGNU9pQm1iR1Y0TzF4dUlDQm1iR1Y0TFdac2IzYzZJSEp2ZHlCdWIzZHlZWEE3WEc0Z0lHRnNhV2R1TFdsMFpXMXpPaUJqWlc1MFpYSTdYRzRnSUM1d1lXZGxMV2wwWlcwZ2UxeHVJQ0FnSUdKdmNtUmxjam9nTVhCNElITnZiR2xrSUNSamIyeHZjaTFuY21GNU8xeHVJQ0FnSUdKdmNtUmxjaTF5WVdScGRYTTZJQzR5TlhKbGJUdGNiaUFnSUNCdFlYSm5hVzQ2SUM0MWNtVnRPMXh1SUNBZ0lHWnZiblF0ZDJWcFoyaDBPaUJpYjJ4a08xeHVJQ0FnSUNZdVlXTjBhWFpsSUh0Y2JpQWdJQ0FnSUdOdmJHOXlPaUFrWTI5c2IzSXRaR0Z5YXp0Y2JpQWdJQ0FnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUhKblltRW9KR052Ykc5eUxYQnlhVzFoY25rc0lDNHhLVHRjYmlBZ0lDQjlYRzRnSUNBZ0pqcG9iM1psY2lCN1hHNGdJQ0FnSUNBdWNHRm5aUzFzYVc1cklIdGNiaUFnSUNBZ0lDQWdZMjlzYjNJNklDUmpiMnh2Y2kxa1lYSnJPMXh1SUNBZ0lDQWdJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUJ5WjJKaEtDUmpiMnh2Y2kxd2NtbHRZWEo1TENBdU1TazdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVJQ0I5WEc0Z0lDNXdZV2RsTFd4cGJtc2dlMXh1SUNBZ0lHUnBjM0JzWVhrNklHbHViR2x1WlMxaWJHOWphenRjYmlBZ0lDQnRhVzR0ZDJsa2RHZzZJREp5WlcwN1hHNGdJQ0FnYUdWcFoyaDBPaUF5Y21WdE8xeHVJQ0FnSUd4cGJtVXRhR1ZwWjJoME9pQXljbVZ0TzF4dUlDQWdJSFJsZUhRdFlXeHBaMjQ2SUdObGJuUmxjanRjYmlBZ2ZWeHVmVnh1SWl3aUx5OWNiaTh2SU9pSnNseHVMeTljYmk4dklPV0NtZWlBZzF4dUx5OGdiR2xuYUhSbGJpZ2tZMjlzYjNJdGNISnBiV0Z5ZVN3Z2VIZ2xLVHNnNkx5ZDVicW00NEtTNUxpSzQ0R1M0NEtMNzd5STVwaU80NEtMNDRHUDQ0R1o0NEtMNzd5SlhHNHZMeUJrWVhKclpXNG9KR052Ykc5eUxYQnlhVzFoY25rc0lIaDRKU2s3SU9pOG5lVzZwdU9Da3VTNGkrT0JrdU9DaSsrOGlPYWFsK09CaitPQm1lT0NpKys4aVZ4dUx5OGdjbWRpWVNna1kyOXNiM0l0Y0hKcGJXRnllU3dnTUM1NEtUc2c2WUNQNXBpTzVicW03N3lJTU9PQmkrT0NpVEhqZ2FmbWpJZmxycHJ2dklsY2JpOHZJRzFwZUNna1kyOXNiM0l0YkdsbmFIUXNJQ1JqYjJ4dmNpMWtZWEpyS1RzZzVMaXQ2WmFUNklteTQ0S1M1YjZYNDRLTFhHNHZMMXh1WEc0dkx5RGxqcC9vaWJMdnZJamxuN3Jtbkt6bm1vVGpnYXZqZ2Eva3ZiL25sS2pqZ1pmamdhcmpnWVR2dklsY2JpUmpiMnh2Y2kxM2FHbDBaVG9nSTBaR1JrWkdSanRjYmlSamIyeHZjaTFpYkdGamF6b2dJekF3TURBd01EdGNibHh1THk4ZzZJT001cG12NklteUlDOGc1cGFINWEyWDZJbXlJQzhnNVorNjVweXM1N2VhNklteVhHNGtZMjlzYjNJdGJHbG5hSFE2SUNObVlXWmhabUU3WEc0a1kyOXNiM0l0WkdGeWF6b2dJek16TXpNek16dGNiaVJqYjJ4dmNpMW5jbUY1T2lCdGFYZ29KR052Ykc5eUxXeHBaMmgwTENBa1kyOXNiM0l0WkdGeWF5azdJQzh2SUd4cFoyaDA0NEdvWkdGeWErT0JydVM0cmVtV2sxeHVYRzR2THlEamdxTGpnNWZqZzZyamdySGpnN3pqZ3Jmamc2ZmpnN1BsbjdybW5Lem9pYkpjYmlSamIyeHZjaTF3Y21sdFlYSjVPaUFqT0VKRE16UkJPeUF2THlEamc2SGpncVRqZzdOY2JpUmpiMnh2Y2kxelpXTnZibVJoY25rNklDTXpRVGs1TmpNN0lDOHZJT09DdGVPRGxseHVKR052Ykc5eUxYUmxjblJwWVhKNU9pQWpSRGMyUlRVeU95QXZMeURqZ3FMamdxL2pncnZqZzdQamc0aGNibHh1THk4ZzQ0SzM0NEs1NDRPRzQ0T2c1Wis2NXB5czZJbXlYRzRrWTI5c2IzSXRaR0Z1WjJWeU9pQWpZemd5TXpNek95QXZMeURvdGFUb2liTG5zN3RjYmlSamIyeHZjaTEzWVhKdWFXNW5PaUFqWm1aak1UQTNPeUF2THlEcHU0VG9pYkxuczd0Y2JpUmpiMnh2Y2kxemRXTmpaWE56T2lBak1qaGhOelExT3lBdkx5RG50NUhvaWJMbnM3dGNiaVJqYjJ4dmNpMXBibVp2T2lNeE4yRXlZamc3SUM4dklPbWRrdWlKc3VlenUxeHVYRzR2TDF4dUx5OGc1Ym1GWEc0dkwxeHVKRzF2WW1sc1pUb2dOalF3Y0hnN1hHNGtjR002SURFeU9EQndlRHRjYmlSb1pEb2dNVGt5TUhCNE8xeHVKR0Z3Y0d4cFkyRjBhVzl1TFcxcGJpMTNhV1IwYURvZ0tDZ2thR1FnTHlBeUtTQXRJREl3Y0hncE95QXZMeUFvU0VRZ0x5QXlLU0F0SUZOamNtOXNiR0poY2lCM2FXUjBhRnh1WEc0dkwxeHVMeThnNVlteTVaQ0lYRzR2TDF4dUpHeDFiV2x1WVc1alpTMXpkSEp2Ym1jNklEUTFKVHRjYmlSc2RXMXBibUZ1WTJVdGQyVmhhem9nTVRVbE8xeHVYRzR2TDF4dUx5OGc0NE9YNDRPdDQ0T1I0NE9HNDRLajQ0R3U1WWlkNXB5ZjVZQ2tYRzR2TDF4dUpHSnZjbVJsY2kxeVlXUnBkWE10Wm05eWJUb2dMakkxY21WdE8xeHVKSEJoWkdScGJtY3RabTl5YlRvZ0xqTnlaVzBnTGpaeVpXMDdYRzRpTENJdktpcGNiaUFxSU9PRG4rT0RnK09DcitPQ3VlT0NwT09EcysrOGlPUzdsdU9CcnVPRG11T0R2T09DdU9PQnArUzl2K2VVcU9PQm1lT0NpK09EbitPRGcrT0NyK09DdWVPQ3BPT0RzK09Da3VXdW11ZStxZSs4aVZ4dUtpb3ZYRzVjYmk4dklHWnNiMkYwNktlajZabWtYRzVBYldsNGFXNGdZMnhsWVhJdFltOTBhQ2dwSUh0Y2JpQWdKam82WVdaMFpYSWdlMXh1SUNBZ0lHUnBjM0JzWVhrNklHSnNiMk5yTzF4dUlDQWdJR052Ym5SbGJuUTZJRndpWENJN1hHNGdJQ0FnWTJ4bFlYSTZJR0p2ZEdnN1hHNGdJSDFjYm4xY2JseHVMeThnNXBhSDVhMlg0NEd1TStlQ3VlT0RxdU9Edk9PRGdPT0R2Tys4aU9pbXF1aW1nZWUwb09PQnErVzVoZU9CcUc5MlpYSm1iRzkzT21ocFpHUmxidU9Cak9XL2hlaW1nZSs4aVZ4dVFHMXBlR2x1SUdWc2JHbHdjMmx6S0NrZ2UxeHVJQ0J2ZG1WeVpteHZkem9nYUdsa1pHVnVPMXh1SUNCMFpYaDBMVzkyWlhKbWJHOTNPaUJsYkd4cGNITnBjenRjYmlBZ2QyaHBkR1V0YzNCaFkyVTZJRzV2ZDNKaGNEdGNibjFjYmlJc0lpOHFJU0J0YVc1cGNtVnpaWFF1WTNOeklIWXdMakF1TXlCOElFMUpWQ0JNYVdObGJuTmxJSHdnWjJsMGFIVmlMbU52YlM5cVozUm9iWE12YldsdWFYSmxjMlYwTG1OemN5QXFMMXh1YUhSdGJDeGNibUp2Wkhrc1hHNXdMRnh1YjJ3c1hHNTFiQ3hjYm14cExGeHVaR3dzWEc1a2RDeGNibVJrTEZ4dVlteHZZMnR4ZFc5MFpTeGNibVpwWjNWeVpTeGNibVpwWld4a2MyVjBMRnh1YkdWblpXNWtMRnh1ZEdWNGRHRnlaV0VzWEc1d2NtVXNYRzVwWm5KaGJXVXNYRzVvY2l4Y2JtZ3hMRnh1YURJc1hHNW9NeXhjYm1nMExGeHVhRFVzWEc1b05pQjdYRzRnSUcxaGNtZHBiam9nTUR0Y2JpQWdjR0ZrWkdsdVp6b2dNRHRjYm4xY2JseHVhREVzWEc1b01peGNibWd6TEZ4dWFEUXNYRzVvTlN4Y2JtZzJJSHRjYmlBZ1ptOXVkQzF6YVhwbE9pQXhNREFsTzF4dUlDQm1iMjUwTFhkbGFXZG9kRG9nYm05eWJXRnNPMXh1ZlZ4dVhHNTFiQ0I3WEc0Z0lHeHBjM1F0YzNSNWJHVTZJRzV2Ym1VN1hHNTlYRzVjYm1KMWRIUnZiaXhjYm1sdWNIVjBMRnh1YzJWc1pXTjBMRnh1ZEdWNGRHRnlaV0VnZTF4dUlDQnRZWEpuYVc0NklEQTdYRzU5WEc1Y2JtaDBiV3dnZTF4dUlDQmliM2d0YzJsNmFXNW5PaUJpYjNKa1pYSXRZbTk0TzF4dWZWeHVYRzRxTENBcU9tSmxabTl5WlN3Z0tqcGhablJsY2lCN1hHNGdJR0p2ZUMxemFYcHBibWM2SUdsdWFHVnlhWFE3WEc1OVhHNWNibWx0Wnl4Y2JtVnRZbVZrTEZ4dWFXWnlZVzFsTEZ4dWIySnFaV04wTEZ4dVlYVmthVzhzWEc1MmFXUmxieUI3WEc0Z0lHaGxhV2RvZERvZ1lYVjBienRjYmlBZ2JXRjRMWGRwWkhSb09pQXhNREFsTzF4dWZWeHVYRzVwWm5KaGJXVWdlMXh1SUNCaWIzSmtaWEk2SURBN1hHNTlYRzVjYm5SaFlteGxJSHRjYmlBZ1ltOXlaR1Z5TFdOdmJHeGhjSE5sT2lCamIyeHNZWEJ6WlR0Y2JpQWdZbTl5WkdWeUxYTndZV05wYm1jNklEQTdYRzU5WEc1Y2JuUmtMRnh1ZEdnZ2UxeHVJQ0J3WVdSa2FXNW5PaUF3TzF4dUlDQjBaWGgwTFdGc2FXZHVPaUJzWldaME8xeHVmVnh1SWl3aWNDQjdYRzRnSUcxaGNtZHBiam9nTUR0Y2JuMWNibHh1YURFc1hHNW9NaXhjYm1nekxGeHVhRFFzWEc1b05TeGNibWcySUh0Y2JpQWdZMjlzYjNJNklHbHVhR1Z5YVhRN1hHNGdJR1p2Ym5RdFptRnRhV3g1T2lCcGJtaGxjbWwwTzF4dWZWeHVYRzVvTVNCN1hHNGdJR1p2Ym5RdGMybDZaVG9nTW5KbGJUdGNiaUFnWm05dWRDMTNaV2xuYUhRNklHbHVhR1Z5YVhRN1hHNTlYRzVjYm1neUlIdGNiaUFnWm05dWRDMXphWHBsT2lBeExqaHlaVzA3WEc0Z0lHWnZiblF0ZDJWcFoyaDBPaUJwYm1obGNtbDBPMXh1ZlZ4dVhHNW9NeUI3WEc0Z0lHWnZiblF0YzJsNlpUb2dNUzQyY21WdE8xeHVJQ0JtYjI1MExYZGxhV2RvZERvZ2FXNW9aWEpwZER0Y2JuMWNibHh1YURRZ2UxeHVJQ0JtYjI1MExYTnBlbVU2SURFdU5ISmxiVHRjYmlBZ1ptOXVkQzEzWldsbmFIUTZJR2x1YUdWeWFYUTdYRzU5WEc1Y2JtZzFJSHRjYmlBZ1ptOXVkQzF6YVhwbE9pQXhMakp5WlcwN1hHNGdJR1p2Ym5RdGQyVnBaMmgwT2lCcGJtaGxjbWwwTzF4dWZWeHVYRzVvTmlCN1hHNGdJR1p2Ym5RdGMybDZaVG9nTVhKbGJUdGNiaUFnWm05dWRDMTNaV2xuYUhRNklHbHVhR1Z5YVhRN1hHNTlYRzVjYm1FZ2UxeHVJQ0JqYjJ4dmNqb2dKR052Ykc5eUxYQnlhVzFoY25rN1hHNGdJSFJsZUhRdFpHVmpiM0poZEdsdmJqb2dibTl1WlR0Y2JpQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dkSEpoYm5Od1lYSmxiblE3WEc0Z0lIUnlZVzV6YVhScGIyNDZJR052Ykc5eUlDNHljeUJsWVhObExXbHVMVzkxZER0Y2JpQWdKanBvYjNabGNpeGNiaUFnSmpwbWIyTjFjeUI3WEc0Z0lDQWdZMjlzYjNJNklHeHBaMmgwWlc0b0pHTnZiRzl5TFhCeWFXMWhjbmtzSUNSc2RXMXBibUZ1WTJVdGQyVmhheWs3WEc0Z0lIMWNibjFjYmx4dWRXd3NYRzV2YkNCN1hHNGdJR3hwYzNRdGMzUjViR1U2SUc1dmJtVTdYRzRnSUhabGNuUnBZMkZzTFdGc2FXZHVPaUJpWVhObGJHbHVaVHRjYm4xY2JseHVkU0I3WEc0Z0lIUmxlSFF0WkdWamIzSmhkR2x2YmpvZ2RXNWtaWEpzYVc1bE8xeHVmVnh1SWwwc0ltNWhiV1Z6SWpwYlhTd2liV0Z3Y0dsdVozTWlPaUk3UVVWQlFUczdSMEZGUnp0QlEwWklMREpGUVVFeVJUdEJRVU16UlN4QlFVRkJMRWxCUVVrN1FVRkRTaXhKUVVGSk8wRkJRMG9zUTBGQlF6dEJRVU5FTEVWQlFVVTdRVUZEUml4RlFVRkZPMEZCUTBZc1JVRkJSVHRCUVVOR0xFVkJRVVU3UVVGRFJpeEZRVUZGTzBGQlEwWXNSVUZCUlR0QlFVTkdMRlZCUVZVN1FVRkRWaXhOUVVGTk8wRkJRMDRzVVVGQlVUdEJRVU5TTEUxQlFVMDdRVUZEVGl4UlFVRlJPMEZCUTFJc1IwRkJSenRCUVVOSUxFMUJRVTA3UVVGRFRpeEZRVUZGTzBGQlEwWXNSVUZCUlR0QlFVTkdMRVZCUVVVN1FVRkRSaXhGUVVGRk8wRkJRMFlzUlVGQlJUdEJRVU5HTEVWQlFVVTdRVUZEUml4RlFVRkZMRU5CUVVNN1JVRkRSQ3hOUVVGTkxFVkJRVVVzUTBGQlF6dEZRVU5VTEU5QlFVOHNSVUZCUlN4RFFVRkRPME5CUTFnN08wRkJSVVFzUVVGQlFTeEZRVUZGTzBGQlEwWXNSVUZCUlR0QlFVTkdMRVZCUVVVN1FVRkRSaXhGUVVGRk8wRkJRMFlzUlVGQlJUdEJRVU5HTEVWQlFVVXNRMEZCUXp0RlFVTkVMRk5CUVZNc1JVRkJSU3hKUVVGSk8wVkJRMllzVjBGQlZ5eEZRVUZGTEUxQlFVMDdRMEZEY0VJN08wRkJSVVFzUVVGQlFTeEZRVUZGTEVOQlFVTTdSVUZEUkN4VlFVRlZMRVZCUVVVc1NVRkJTVHREUVVOcVFqczdRVUZGUkN4QlFVRkJMRTFCUVUwN1FVRkRUaXhMUVVGTE8wRkJRMHdzVFVGQlRUdEJRVU5PTEZGQlFWRXNRMEZCUXp0RlFVTlFMRTFCUVUwc1JVRkJSU3hEUVVGRE8wTkJRMVk3TzBGQlJVUXNRVUZCUVN4SlFVRkpMRU5CUVVNN1JVRkRTQ3hWUVVGVkxFVkJRVVVzVlVGQlZUdERRVU4yUWpzN1FVRkZSQ3hCUVVGQkxFTkJRVU1zUlVGQlJTeERRVUZETEVGQlFVRXNUMEZCVHl4RlFVRkZMRU5CUVVNc1FVRkJRU3hOUVVGTkxFTkJRVU03UlVGRGJrSXNWVUZCVlN4RlFVRkZMRTlCUVU4N1EwRkRjRUk3TzBGQlJVUXNRVUZCUVN4SFFVRkhPMEZCUTBnc1MwRkJTenRCUVVOTUxFMUJRVTA3UVVGRFRpeE5RVUZOTzBGQlEwNHNTMEZCU3p0QlFVTk1MRXRCUVVzc1EwRkJRenRGUVVOS0xFMUJRVTBzUlVGQlJTeEpRVUZKTzBWQlExb3NVMEZCVXl4RlFVRkZMRWxCUVVrN1EwRkRhRUk3TzBGQlJVUXNRVUZCUVN4TlFVRk5MRU5CUVVNN1JVRkRUQ3hOUVVGTkxFVkJRVVVzUTBGQlF6dERRVU5XT3p0QlFVVkVMRUZCUVVFc1MwRkJTeXhEUVVGRE8wVkJRMG9zWlVGQlpTeEZRVUZGTEZGQlFWRTdSVUZEZWtJc1kwRkJZeXhGUVVGRkxFTkJRVU03UTBGRGJFSTdPMEZCUlVRc1FVRkJRU3hGUVVGRk8wRkJRMFlzUlVGQlJTeERRVUZETzBWQlEwUXNUMEZCVHl4RlFVRkZMRU5CUVVNN1JVRkRWaXhWUVVGVkxFVkJRVVVzU1VGQlNUdERRVU5xUWpzN1FVTm9Sa1FzUVVGQlFTeERRVUZETEVOQlFVTTdSVUZEUVN4TlFVRk5MRVZCUVVVc1EwRkJRenREUVVOV096dEJRVVZFTEVGQlFVRXNSVUZCUlR0QlFVTkdMRVZCUVVVN1FVRkRSaXhGUVVGRk8wRkJRMFlzUlVGQlJUdEJRVU5HTEVWQlFVVTdRVUZEUml4RlFVRkZMRU5CUVVNN1JVRkRSQ3hMUVVGTExFVkJRVVVzVDBGQlR6dEZRVU5rTEZkQlFWY3NSVUZCUlN4UFFVRlBPME5CUTNKQ096dEJRVVZFTEVGQlFVRXNSVUZCUlN4RFFVRkRPMFZCUTBRc1UwRkJVeXhGUVVGRkxFbEJRVWs3UlVGRFppeFhRVUZYTEVWQlFVVXNUMEZCVHp0RFFVTnlRanM3UVVGRlJDeEJRVUZCTEVWQlFVVXNRMEZCUXp0RlFVTkVMRk5CUVZNc1JVRkJSU3hOUVVGTk8wVkJRMnBDTEZkQlFWY3NSVUZCUlN4UFFVRlBPME5CUTNKQ096dEJRVVZFTEVGQlFVRXNSVUZCUlN4RFFVRkRPMFZCUTBRc1UwRkJVeXhGUVVGRkxFMUJRVTA3UlVGRGFrSXNWMEZCVnl4RlFVRkZMRTlCUVU4N1EwRkRja0k3TzBGQlJVUXNRVUZCUVN4RlFVRkZMRU5CUVVNN1JVRkRSQ3hUUVVGVExFVkJRVVVzVFVGQlRUdEZRVU5xUWl4WFFVRlhMRVZCUVVVc1QwRkJUenREUVVOeVFqczdRVUZGUkN4QlFVRkJMRVZCUVVVc1EwRkJRenRGUVVORUxGTkJRVk1zUlVGQlJTeE5RVUZOTzBWQlEycENMRmRCUVZjc1JVRkJSU3hQUVVGUE8wTkJRM0pDT3p0QlFVVkVMRUZCUVVFc1JVRkJSU3hEUVVGRE8wVkJRMFFzVTBGQlV5eEZRVUZGTEVsQlFVazdSVUZEWml4WFFVRlhMRVZCUVVVc1QwRkJUenREUVVOeVFqczdRVUZGUkN4QlFVRkJMRU5CUVVNc1EwRkJRenRGUVVOQkxFdEJRVXNzUlVoNlFsTXNUMEZCVHp0RlJ6QkNja0lzWlVGQlpTeEZRVUZGTEVsQlFVazdSVUZEY2tJc1owSkJRV2RDTEVWQlFVVXNWMEZCVnp0RlFVTTNRaXhWUVVGVkxFVkJRVVVzY1VKQlFYRkNPME5CUzJ4RE96dEJRVlJFTEVGQlMwVXNRMEZNUkN4QlFVdEZMRTFCUVUwc1JVRk1WQ3hEUVVGRExFRkJUVVVzVFVGQlRTeERRVUZETzBWQlEwNHNTMEZCU3l4RlFVRkZMRTlCUVhkRE8wTkJRMmhFT3p0QlFVZElMRUZCUVVFc1JVRkJSVHRCUVVOR0xFVkJRVVVzUTBGQlF6dEZRVU5FTEZWQlFWVXNSVUZCUlN4SlFVRkpPMFZCUTJoQ0xHTkJRV01zUlVGQlJTeFJRVUZSTzBOQlEzcENPenRCUVVWRUxFRkJRVUVzUTBGQlF5eERRVUZETzBWQlEwRXNaVUZCWlN4RlFVRkZMRk5CUVZNN1EwRkRNMEk3TzBGS2FFUkVMRUZCUVVFc1NVRkJTU3hEUVVGRE8wVkJRMGdzVTBGQlV5eEZRVUZGTEVsQlFVazdRMEZEYUVJN08wRkJSVVFzUVVGQlFTeEpRVUZKTEVOQlFVTTdSVUZEU0N4WFFVRlhMRVZCUVVVc2EwZEJRV3RITzBWQlF5OUhMRmRCUVZjc1JVRkJSU3hIUVVGSE8wVkJRMmhDTEZOQlFWTXNSVUZCUlN4SlFVRkpPMFZCUTJZc1owSkJRV2RDTEVWRFVrb3NUMEZCVHp0RlJGTnVRaXhMUVVGTExFVkRVazBzVDBGQlR6dEZSRlZzUWl4UFFVRlBMRVZCUVVVc1NVRkJTVHRGUVVOaUxHdENRVUZyUWl4RlFVRkZMRmxCUVZrN1JVRkRhRU1zY1VKQlFYRkNMRVZCUVVVc1QwRkJUenRGUVVNNVFpeGpRVUZqTEVWQlFVVXNXVUZCV1R0RlFVTTFRaXhSUVVGUkxFVkJRVVVzVlVGQlZUdERRVU55UWpzN1FVRkZSQ3hCUVVGQkxFOUJRVThzUTBGQlF6dEZRVU5PTEZGQlFWRXNSVUZCUlN4TFFVRkxPMFZCUTJZc1YwRkJWeXhGUVVGRkxGVkJRVlU3UTBFeVFuaENPenRCUVRkQ1JDeEJRVWRGTEU5QlNFc3NRMEZIVEN4VlFVRlZMRU5CUVVNN1JVRkRWQ3hMUVVGTExFVkJRVVVzUjBGQlJ6dEZRVU5XTEZOQlFWTXNSVU5HVnl4TFFVRnJRanRGUkVkMFF5eE5RVUZOTEVWQlFVVXNUVUZCVFR0RlFVTmtMRTlCUVU4c1JVRkJSU3hKUVVGSk8wVkJRMklzVTBGQlV5eEZRVUZGTEZWQlFWVTdSVUZEY2tJc1YwRkJWeXhGUVVGRkxFMUJRVTA3UTBGRGNFSTdPMEZCVmtnc1FVRlhSU3hQUVZoTExFTkJWMHdzVlVGQlZTeERRVUZETzBWQlExUXNVMEZCVXl4RlFVRkZMRTFCUVUwN1EwRkRiRUk3TzBGQllrZ3NRVUZsU1N4UFFXWkhMRU5CWTB3c1IwRkJSeXhEUVVORUxFVkJRVVVzUTBGQlF6dEZRVU5FTEU5QlFVOHNSVUZCUlN4SlFVRkpPMFZCUTJJc1UwRkJVeXhGUVVGRkxGVkJRVlU3UlVGRGNrSXNWMEZCVnl4RlFVRkZMRTFCUVUwN1EwRlRjRUk3TzBGQk0wSk1MRUZCYlVKTkxFOUJia0pETEVOQlkwd3NSMEZCUnl4RFFVTkVMRVZCUVVVc1EwRkpRU3hGUVVGRkxFTkJRVU03UlVGRFJDeFhRVUZYTEVWQlFVVXNTVUZCU1R0RFFVMXNRanM3UVVFeFFsQXNRVUZ4UWxFc1QwRnlRa1FzUTBGalRDeEhRVUZITEVOQlEwUXNSVUZCUlN4RFFVbEJMRVZCUVVVc1EwRkZRU3hEUVVGRExFTkJRVU03UlVGRFFTeFBRVUZQTEVWQlFVVXNXVUZCV1R0RlFVTnlRaXhMUVVGTExFVkJRVVVzU1VGQlNUdEZRVU5ZTEUxQlFVMHNSVUZCUlN4SlFVRkpPME5CUTJJN08wRkJUVlFzUVVGQlFTeExRVUZMTEVOQlFVTTdSVUZEU2l4UlFVRlJMRVZCUVVVc1MwRkJTenRGUVVObUxGZEJRVmNzUlVGQlJTeExRVUZMTzBOQlRXNUNPenRCUVZKRUxFRkJSMFVzUzBGSVJ5eERRVWRJTEZWQlFWVXNRMEZCUXp0RlFVTlVMRXRCUVVzc1JVRkJSU3hIUVVGSE8wVkJRMVlzVTBGQlV5eEZRMnBEVnl4TFFVRnJRanRGUkd0RGRFTXNUVUZCVFN4RlFVRkZMRTFCUVUwN1EwRkRaanM3UVVGSFNDeEJRVUZCTEU5QlFVOHNRMEZCUXp0RlFVTk9MRkZCUVZFc1JVRkJSU3hMUVVGTE8wVkJRMllzVjBGQlZ5eEZRVUZGTEV0QlFVczdRMEZEYmtJN08wRkJSVVFzUVVGQlFTeE5RVUZOTEVOQlFVTTdSVUZEVEN4UlFVRlJMRVZCUVVVc1MwRkJTenRGUVVObUxGZEJRVmNzUlVGQlJTeExRVUZMTzBWQlEyeENMRTFCUVUwc1JVRkJSU3hIUVVGSExFTkJRVU1zUzBGQlN5eERRMnBGVGl4UFFVRTRRanRGUkd0RmVrTXNZVUZCWVN4RlFVRkZMRTFCUVUwN1EwRnRRblJDT3p0QlFYWkNSQ3hCUVV0RkxFMUJURWtzUTBGTFNpeFpRVUZaTEVOQlFVTTdSVUZEV0N4WFFVRlhMRVZCUVVVc1NVRkJTVHRGUVVOcVFpeFRRVUZUTEVWQlFVVXNUVUZCVFR0RFFVTnNRanM3UVVGU1NDeEJRVlZKTEUxQlZrVXNRMEZUU2l4WFFVRlhMRU5CUTFRc1JVRkJSU3hEUVVGRE8wVkJRMFFzWVVGQllTeEZRVUZGTEVkQlFVY3NRMEZCUXl4TFFVRkxMRU5EZWtWcVFpeFBRVUU0UWp0RlJEQkZja01zVjBGQlZ5eEZRVUZGTEVsQlFVazdRMEZUYkVJN08wRkJja0pNTEVGQllVMHNUVUZpUVN4RFFWTktMRmRCUVZjc1EwRkRWQ3hGUVVGRkxFRkJSME1zV1VGQldTeERRVUZETzBWQlExb3NWVUZCVlN4RlFVRkZMRWRCUVVjc1EwRkJReXhMUVVGTExFTkROVVZvUWl4UFFVRTRRanREUkRaRmNFTTdPMEZCWmxBc1FVRm5RazBzVFVGb1FrRXNRMEZUU2l4WFFVRlhMRU5CUTFRc1JVRkJSU3hEUVUxQkxFTkJRVU1zUTBGQlF6dEZRVU5CTEU5QlFVOHNSVUZCUlN4WlFVRlpPMFZCUTNKQ0xFdEJRVXNzUlVGQlJTeEpRVUZKTzBWQlExZ3NUVUZCVFN4RlFVRkZMRWxCUVVrN1EwRkRZanM3UVVGTFVDeEJRVUZCTEZkQlFWY3NRMEZCUXp0RlFVTldMRTlCUVU4c1JVRkJSU3hKUVVGSk8wVkJRMklzVTBGQlV5eEZRVUZGTEZWQlFWVTdSVUZEY2tJc1YwRkJWeXhGUVVGRkxFMUJRVTA3UTBGM1FuQkNPenRCUVROQ1JDeEJRVWxGTEZkQlNsTXNRMEZKVkN4VlFVRlZMRU5CUVVNN1JVRkRWQ3hOUVVGTkxFVkJRVVVzUjBGQlJ5eERRVUZETEV0QlFVc3NRME0xUmxJc1QwRkJPRUk3UlVRMlJuWkRMR0ZCUVdFc1JVRkJSU3hOUVVGTk8wVkJRM0pDTEUxQlFVMHNSVUZCUlN4TFFVRkxPMFZCUTJJc1YwRkJWeXhGUVVGRkxFbEJRVWs3UTBGWGJFSTdPMEZCYmtKSUxFRkJVMGtzVjBGVVR5eERRVWxVTEZWQlFWVXNRVUZMVUN4UFFVRlBMRU5CUVVNN1JVRkRVQ3hMUVVGTExFVkRiRWRGTEU5QlFVODdSVVJ0UjJRc1owSkJRV2RDTEVWREwwWk9MSFZDUVVGUE8wTkVaMGRzUWpzN1FVRmFUQ3hCUVdOTkxGZEJaRXNzUTBGSlZDeFZRVUZWTEVGQlUxQXNUVUZCVFN4RFFVTk1MRlZCUVZVc1EwRkJRenRGUVVOVUxFdEJRVXNzUlVOMlIwRXNUMEZCVHp0RlJIZEhXaXhuUWtGQlowSXNSVU53UjFJc2RVSkJRVTg3UTBSeFIyaENPenRCUVdwQ1VDeEJRVzlDUlN4WFFYQkNVeXhEUVc5Q1ZDeFZRVUZWTEVOQlFVTTdSVUZEVkN4UFFVRlBMRVZCUVVVc1dVRkJXVHRGUVVOeVFpeFRRVUZUTEVWQlFVVXNTVUZCU1R0RlFVTm1MRTFCUVUwc1JVRkJSU3hKUVVGSk8wVkJRMW9zVjBGQlZ5eEZRVUZGTEVsQlFVazdSVUZEYWtJc1ZVRkJWU3hGUVVGRkxFMUJRVTA3UTBGRGJrSWlmUT09ICovXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcmVzb3VyY2VzL2Fzc2V0cy9zYXNzL2FwcC5zY3NzIiwiLyoqXG4gKiDDo8KDwp/Do8KDwoPDo8KCwq/Do8KCwrnDo8KCwqTDo8KDwrPDr8K8wojDpMK7wpbDo8KBwq7Do8KDwprDo8KDwrzDo8KCwrjDo8KBwqfDpMK9wr/Dp8KUwqjDo8KBwpnDo8KCwovDo8KDwp/Do8KDwoPDo8KCwq/Do8KCwrnDo8KCwqTDo8KDwrPDo8KCwpLDpcKuwprDp8K+wqnDr8K8wolcbioqL1xuXG4vLyBmbG9hdMOowqfCo8OpwpnCpFxuQG1peGluIGNsZWFyLWJvdGgoKSB7XG4gICY6OmFmdGVyIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIGNsZWFyOiBib3RoO1xuICB9XG59XG5cbi8vIMOmwpbCh8Olwq3Cl8OjwoHCrjPDp8KCwrnDo8KDwqrDo8KDwrzDo8KDwoDDo8KDwrzDr8K8wojDqMKmwqrDqMKmwoHDp8K0wqDDo8KBwqvDpcK5woXDo8KBwqhvdmVyZmxvdzpoaWRkZW7Do8KBwozDpcK/woXDqMKmwoHDr8K8wolcbkBtaXhpbiBlbGxpcHNpcygpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9yZXNvdXJjZXMvYXNzZXRzL3Nhc3MvcmVzb3VyY2VzL2Fzc2V0cy9zYXNzL3BhcnRpYWxzL19taXhpbi5zY3NzIiwiLyohIG1pbmlyZXNldC5jc3MgdjAuMC4zIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL2pndGhtcy9taW5pcmVzZXQuY3NzICovXG5odG1sLFxuYm9keSxcbnAsXG5vbCxcbnVsLFxubGksXG5kbCxcbmR0LFxuZGQsXG5ibG9ja3F1b3RlLFxuZmlndXJlLFxuZmllbGRzZXQsXG5sZWdlbmQsXG50ZXh0YXJlYSxcbnByZSxcbmlmcmFtZSxcbmhyLFxuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2IHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG5oMSxcbmgyLFxuaDMsXG5oNCxcbmg1LFxuaDYge1xuICBmb250LXNpemU6IDEwMCU7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG59XG5cbnVsIHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbn1cblxuYnV0dG9uLFxuaW5wdXQsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIG1hcmdpbjogMDtcbn1cblxuaHRtbCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbiosICo6YmVmb3JlLCAqOmFmdGVyIHtcbiAgYm94LXNpemluZzogaW5oZXJpdDtcbn1cblxuaW1nLFxuZW1iZWQsXG5pZnJhbWUsXG5vYmplY3QsXG5hdWRpbyxcbnZpZGVvIHtcbiAgaGVpZ2h0OiBhdXRvO1xuICBtYXgtd2lkdGg6IDEwMCU7XG59XG5cbmlmcmFtZSB7XG4gIGJvcmRlcjogMDtcbn1cblxudGFibGUge1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICBib3JkZXItc3BhY2luZzogMDtcbn1cblxudGQsXG50aCB7XG4gIHBhZGRpbmc6IDA7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9yZXNvdXJjZXMvYXNzZXRzL3Nhc3MvcmVzb3VyY2VzL2Fzc2V0cy9zYXNzL3BhcnRpYWxzL19taW5pcmVzZXQuc2NzcyIsInAge1xuICBtYXJnaW46IDA7XG59XG5cbmgxLFxuaDIsXG5oMyxcbmg0LFxuaDUsXG5oNiB7XG4gIGNvbG9yOiBpbmhlcml0O1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbn1cblxuaDEge1xuICBmb250LXNpemU6IDJyZW07XG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0O1xufVxuXG5oMiB7XG4gIGZvbnQtc2l6ZTogMS44cmVtO1xuICBmb250LXdlaWdodDogaW5oZXJpdDtcbn1cblxuaDMge1xuICBmb250LXNpemU6IDEuNnJlbTtcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XG59XG5cbmg0IHtcbiAgZm9udC1zaXplOiAxLjRyZW07XG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0O1xufVxuXG5oNSB7XG4gIGZvbnQtc2l6ZTogMS4ycmVtO1xuICBmb250LXdlaWdodDogaW5oZXJpdDtcbn1cblxuaDYge1xuICBmb250LXNpemU6IDFyZW07XG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0O1xufVxuXG5hIHtcbiAgY29sb3I6ICRjb2xvci1wcmltYXJ5O1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICB0cmFuc2l0aW9uOiBjb2xvciAuMnMgZWFzZS1pbi1vdXQ7XG4gICY6aG92ZXIsXG4gICY6Zm9jdXMge1xuICAgIGNvbG9yOiBsaWdodGVuKCRjb2xvci1wcmltYXJ5LCAkbHVtaW5hbmNlLXdlYWspO1xuICB9XG59XG5cbnVsLFxub2wge1xuICBsaXN0LXN0eWxlOiBub25lO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnUge1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3Jlc291cmNlcy9hc3NldHMvc2Fzcy9yZXNvdXJjZXMvYXNzZXRzL3Nhc3MvcGFydGlhbHMvX3R5cG9ncmFwaHkuc2NzcyIsIi8vIMOlwq7CmsOmwpXCsFxuQGltcG9ydCBcInBhcnRpYWxzL3ZhcmlhYmxlc1wiO1xuXG4vLyDDo8KDwp/Do8KDwoPDo8KCwq/Do8KCwrnDo8KCwqTDo8KDwrNcbkBpbXBvcnQgXCJwYXJ0aWFscy9taXhpblwiO1xuXG4vLyDDo8KDwqrDo8KCwrvDo8KDwoPDo8KDwohcbkBpbXBvcnQgXCJwYXJ0aWFscy9taW5pcmVzZXRcIjtcblxuLy8gw6PCgsK/w6PCgsKkw6PCg8Kdw6PCgsKww6PCg8Kpw6PCg8KVw6PCgsKjXG5AaW1wb3J0IFwicGFydGlhbHMvdHlwb2dyYXBoeVwiO1xuXG4vL1xuLy8gw6XChcKow6TCvcKTw6PCgcKuw6PCg8Ksw6PCgsKkw6PCgsKiw6PCgsKmw6PCg8KIXG4vL1xuaHRtbCB7XG4gIGZvbnQtc2l6ZTogMTZweDtcbn1cblxuYm9keSB7XG4gIGZvbnQtZmFtaWx5OiAnSGlyYWdpbm8gS2FrdSBHb3RoaWMgUHJvJywgJ8OjwoPCksOjwoPCqcOjwoLCrsOjwoPCjsOowqfCksOjwoLCtCBQcm8gVzMnLCDDo8KDwqHDo8KCwqTDo8KDwqrDo8KCwqosIE1laXJ5bywgJ8OvwrzCrcOvwrzCsyDDr8K8wrDDo8KCwrTDo8KCwrfDo8KDwoPDo8KCwq8nLCBzYW5zLXNlcmlmO1xuICBmb250LXdlaWdodDogNTAwO1xuICBmb250LXNpemU6IDFyZW07XG4gIGJhY2tncm91bmQtY29sb3I6ICRjb2xvci1saWdodDtcbiAgY29sb3I6ICRjb2xvci1kYXJrO1xuICAvLyBzZXQgZ3JpZFxuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLXJvd3M6IDFmciBhdXRvIDFmcjtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiA0ZnIgMWZyO1xuICBncmlkLWF1dG8tZmxvdzogY29sdW1uIGRlbnNlO1xuICBncmlkLWdhcDogMXJlbSAuNXJlbTsgLy8gcm93IC8gY29sdW1uXG59XG5cbiNoZWFkZXIge1xuICBncmlkLXJvdzogMSAvIDE7XG4gIGdyaWQtY29sdW1uOiAxIC8gc3BhbiAyO1xuICAuY29udGFpbmVyIHtcbiAgICB3aWR0aDogOTAlO1xuICAgIG1heC13aWR0aDogJGFwcGxpY2F0aW9uLW1pbi13aWR0aDtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZmxvdzogcm93IG5vd3JhcDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB9XG4gIC5hcHAtdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMS41cmVtO1xuICB9XG4gIG5hdiB7XG4gICAgdWwge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGZsZXgtZmxvdzogcm93IG5vd3JhcDtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICBsaSB7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiAxcmVtO1xuICAgICAgICBhIHtcbiAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbiNtYWluIHtcbiAgZ3JpZC1yb3c6IDIgLyAyO1xuICBncmlkLWNvbHVtbjogMSAvIDI7XG4gIC5jb250YWluZXIge1xuICAgIHdpZHRoOiA5MCU7XG4gICAgbWF4LXdpZHRoOiAkYXBwbGljYXRpb24tbWluLXdpZHRoO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICB9XG59XG5cbiNmb290ZXIge1xuICBncmlkLXJvdzogMyAvIDM7XG4gIGdyaWQtY29sdW1uOiAxIC8gMjtcbn1cblxuI2FzaWRlIHtcbiAgZ3JpZC1yb3c6IDIgLyAyO1xuICBncmlkLWNvbHVtbjogMiAvIDI7XG4gIGJvcmRlcjogMXB4IHNvbGlkICRjb2xvci1ncmF5O1xuICBib3JkZXItcmFkaXVzOiAuMjVyZW07XG4gIC5hc2lkZS10aXRsZSB7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgZm9udC1zaXplOiAxLjJyZW07XG4gIH1cbiAgLmFzaWRlLWxpc3Qge1xuICAgIGxpIHtcbiAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkY29sb3ItZ3JheTtcbiAgICAgIGxpbmUtaGVpZ2h0OiAycmVtO1xuICAgICAgJjpmaXJzdC1jaGlsZCB7XG4gICAgICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAkY29sb3ItZ3JheTtcbiAgICAgIH1cbiAgICAgIGEge1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbi5wYWdpbmF0aW9uIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1mbG93OiByb3cgbm93cmFwO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAucGFnZS1pdGVtIHtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAkY29sb3ItZ3JheTtcbiAgICBib3JkZXItcmFkaXVzOiAuMjVyZW07XG4gICAgbWFyZ2luOiAuNXJlbTtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAmLmFjdGl2ZSB7XG4gICAgICBjb2xvcjogJGNvbG9yLWRhcms7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKCRjb2xvci1wcmltYXJ5LCAuMSk7XG4gICAgfVxuICAgICY6aG92ZXIge1xuICAgICAgLnBhZ2UtbGluayB7XG4gICAgICAgIGNvbG9yOiAkY29sb3ItZGFyaztcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgkY29sb3ItcHJpbWFyeSwgLjEpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICAucGFnZS1saW5rIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgbWluLXdpZHRoOiAycmVtO1xuICAgIGhlaWdodDogMnJlbTtcbiAgICBsaW5lLWhlaWdodDogMnJlbTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3Jlc291cmNlcy9hc3NldHMvc2Fzcy9yZXNvdXJjZXMvYXNzZXRzL3Nhc3MvYXBwLnNjc3MiXSwic291cmNlUm9vdCI6IiJ9*/